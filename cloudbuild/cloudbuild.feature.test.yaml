# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: "clone from GitHub repo"
    name: gcr.io/cloud-builders/git
    args: ["clone", "https://github.com/lightcoker/CatchyPass.git"]

  - id: "create cluster"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # capture the cluster name to be created
        # (it will be used again for the deletion)
        echo "test-$SHORT_SHA" > _cluster-name
        gcloud container clusters create $(cat _cluster-name)
    waitFor: ["-"] # start immediately

  - id: "patch k8s config"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args: ["-c", 'find k8s -type f | xargs sed -i "s/PROJECT_ID/$PROJECT_ID/g"']
    waitFor: ["create cluster"]

  # ingress-nginx
  - id: "helm add repo"
    name: "gcr.io/$PROJECT_ID/helm"
    args:
      - "repo"
      - "add"
      - "stable"
      - "https://kubernetes-charts.storage.googleapis.com"
    waitFor: ["patch k8s config"]

  - id: "deploy ingress-nginx"
    name: "gcr.io/$PROJECT_ID/helm"
    args:
      - "install"
      - "my-nginx"
      - "stable/nginx-ingress"
      - "--set"
      - "rbac.create=true"
    waitFor: ["helm add repo"]

  # PVC
  - id: "deploy pvc"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/staging/mongodb-pvc.yaml"
    waitFor: ["deploy ingress-nginx"]

  # ingress setup
  - id: "deploy ingress local service"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/staging/ingress-service-local.yaml"
    waitFor: ["deploy ingress-nginx"]

  # mongo docker
  - id: "set mongo secret"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "create"
      - "secret"
      - "generic"
      - "mongopassword"
      - "--from-literal"
      - "MONGO_PASSWORD=${_MONGO_SECRET}"
    waitFor: ["deploy pvc"]

  - id: "deploy mongo"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/deployment/mongodb-deployment.yaml"
    waitFor: ["set mongo secret"]

  # redis
  - id: "deploy redis"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/staging/deployment/redis-deployment.yaml"
    waitFor: ["patch k8s config"]

  # service
  - id: "deploy services"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/staging/service/"
    waitFor: ["deploy ingress local service"]

  # server docker
  # Build images
  - id: "build server docker"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "asia.gcr.io/catchypass-dev/server-stg:$SHORT_SHA"
      - "./server"
    waitFor: ["patch k8s config"]
  - id: "push server docker"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "asia.gcr.io/catchypass-dev/server-stg:$SHORT_SHA"
    waitFor: ["build server docker"]
  - id: "deploy server"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/staging/deployment/server-deployment.yaml"
    waitFor: ["push server docker"]

  # worker
  - id: "build worker docker"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "asia.gcr.io/catchypass-dev/worker-stg:$SHORT_SHA"
      - "./worker"
    waitFor: ["deploy server"]
  - id: "push worker docker"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "asia.gcr.io/catchypass-dev/worker-stg:$SHORT_SHA"
    waitFor: ["build worker docker"]
  - id: "deploy worker"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/staging/deployment/worker-deployment.yaml"
    waitFor: ["push worker docker"]

  # client
  - id: "build client docker"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "asia.gcr.io/catchypass-dev/client-stg:$SHORT_SHA"
      - "./client"
    waitFor: ["deploy worker"]
  - id: "push client docker"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "asia.gcr.io/catchypass-dev/client-stg:$SHORT_SHA"
    waitFor: ["build client docker"]
  - id: "deploy client"
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "./k8s/staging/deployment/client-deployment.yaml"
    waitFor: ["push client docker"]

options:
  env:
    # location/name of GKE cluster (used by all kubectl commands)
    - CLOUDSDK_COMPUTE_ZONE=asia-east2-a
    - CLOUDSDK_CONTAINER_CLUSTER=test-$SHORT_SHA
    - CI=true

timeout: 60m0s
